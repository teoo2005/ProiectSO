#!/bin/bash

while true; do
    # Solicitam numele de utilizator
    echo "Introduceti numele de utilizator pentru autentificare:"
    read user

    # Cautam utilizatorul in fisierul utilizatori.csv
    line=$(grep "^$user," utilizatori.csv)

    # Daca utilizatorul nu este gasit, afisam mesaj si cerem din nou numele
    if [ -z "$line" ]; then
        echo "Eroare: Utilizatorul $user nu exista inregistrat. Va rugam sa va inregistrati mai intai."
        echo "Mergeti in meniul principal la inregistrare."
        continue
    fi

    # Extragem parola criptata
    stored_password=$(echo $line | sed 's/^[^,]*,[^,]*,[^,]*2,\([^,]*\),.*$/\1/')

    # Solicitam parola
    echo "Introduceti parola:"
    read -s input_password

    # Criptam parola introdusa
    input_password_hash=$(echo -n "$input_password" | sha256sum | sed 's/^\([a-f0-9]\{64\}\)\s.*$/\1/')

    # Verificam daca hash-ul parolei este corect
    if [ "$input_password_hash" != "$stored_password" ]; then
        echo "Eroare: Parola introdusa nu este corecta. Asigurati-va ca respectati exact parola introdusa la inregistrare."
        continue
    fi

    # Daca parola este corecta, actualizam campul last_login
    date_now=$(date '+%Y-%m-%d %H:%M:%S')
    sed -i "s/^$user,[^,]*,[^,]*,[^,]*$/&,$date_now/" utilizatori.csv

    # Extragem user_id
    user_id=$(echo $line | sed 's/^\([^,]*\),.*$/\1/')

    # Verificam daca directorul home exista, altfel dam mesaj
    # if [ ! -d "/home/$user_id" ]; then
    #    echo "Atentie: Directorul home pentru utilizatorul $user nu exista. Creati contul din nou!"
    #   continue
    # fi

    echo "Autentificare reusita! Te vei muta in directorul personal."
    cd "/home/$user_id"

    # Adaugam utilizatorul la lista de utilizatori logati
    utilizatori_logati+=("$user")
    echo "Utilizatorul $user este acum autentificat si logat."

    break
done
