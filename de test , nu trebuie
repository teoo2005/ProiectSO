#!/bin/bash

# Verificăm dacă fișierul utilizatori.csv există deja sau trebuie să-l creăm
if [ ! -f "utilizatori.csv" ]; then
    # Dacă fișierul nu există, îl creăm
    touch utilizatori.csv
    echo "Fișierul utilizatori.csv a fost creat." # Informăm utilizatorul
fi

# Lista pentru utilizatorii autentificați
logged_in_users=()

# Funcție pentru a autentifica utilizatorul
authenticate_user() {
    # Solicităm numele de utilizator
    echo "Introduceti numele de utilizator pentru autentificare:"
    read username

    # Căutăm utilizatorul în fișierul utilizatori.csv
    user_line=$(grep "^$username," utilizatori.csv)

    if [ -z "$user_line" ]; then
        echo "Utilizatorul $username nu exista."
        return
    fi

    # Extragem parola criptată din fișierul CSV
    stored_password_hash=$(echo $user_line | sed 's/^[^,]*,[^,]*,[^,]*,\([^,]*\),.*$/\1/')

    # Solicităm parola
    echo "Introduceti parola:"
    read -s password

    # Criptăm parola introdusă
    password_hash=$(echo -n "$password" | sha256sum | sed 's/^\([a-f0-9]\{64\}\)\s.*$/\1/')

    # Verificăm dacă hash-ul parolei este corect
    if [ "$password_hash" != "$stored_password_hash" ]; then
        echo "Parola incorectă."
        return
    fi

    # Dacă parola este corectă, actualizăm câmpul last_login
    current_time=$(date '+%Y-%m-%d %H:%M:%S')
    sed -i "s/^$username,[^,]*,[^,]*,[^,]*$/&,$current_time/" utilizatori.csv

    # Navigăm către directorul home al utilizatorului
    user_id=$(echo $user_line | sed 's/^\([^,]*\),.*$/\1/')
    mkdir -p "/home/$user_id"
    echo "Autentificare reușită! Veți fi direcționat către directorul home."
    cd "/home/$user_id"

    # Adăugăm utilizatorul la lista de utilizatori autentificați
    logged_in_users+=("$username")
    echo "Utilizatorul $username este acum autentificat."
}

# Funcție pentru a efectua logout
logout_user() {
    # Solicităm numele utilizatorului pentru logout
    echo "Introduceti numele de utilizator pentru logout:"
    read username

    # Verificăm dacă utilizatorul este autentificat
    if [[ " ${logged_in_users[@]} " =~ " $username " ]]; then
        # Eliminăm utilizatorul din lista de autentificați
        logged_in_users=("${logged_in_users[@]/$username}")
        echo "Utilizatorul $username a fost deconectat."
    else
        echo "Utilizatorul $username nu este autentificat."
    fi
}

# Meniu principal
while true; do
    echo -e "\nMeniu:"
    echo "1. Autentificare"
    echo "2. Logout"
    echo "3. Inregistrare utilizator nou"
    echo "4. Ieșire"
    echo "Alegeți o opțiune:"
    read option

    case $option in
        1)
            authenticate_user
            ;;
        2)
            logout_user
            ;;
        3)
            # Înregistrarea unui utilizator nou
            echo "Introduceti numele de utilizator pentru înregistrare:"
            read username

            # Verificăm dacă utilizatorul există deja în fișierul utilizatori.csv
            grep -q "^$username," utilizatori.csv
            if [ $? -eq 0 ]; then
                echo "Utilizatorul $username exista deja. Va rugam sa alegeti un alt nume de utilizator."
                continue
            fi

            # Solicităm adresa de email
            echo "Introduceti adresa de email:"
            read email

            # Verificăm dacă email-ul există deja în fișierul CSV
            grep -q "^$email," utilizatori.csv
            if [ $? -eq 0 ]; then
                echo "Adresa de email $email este deja înregistrată. Vă rugăm să alegeți un alt email."
                continue
            fi

            # Validăm adresa de email folosind un regex simplu
            echo "$email" | grep -E -q "^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$"
            if [ $? -ne 0 ]; then
                echo "Adresa de email introdusă nu este validă. Vă rugăm să introduceți un email valid (ex: exemplu@domeniu.com)."
                continue
            fi

            # Solicităm parola
            echo "Introduceti parola (minim 8 caractere, cel puțin o cifră):"
            read -s password

            # Validăm complexitatea parolei (minim 8 caractere și cel puțin o cifră)
            if [ ${#password} -lt 8 ] || [[ ! "$password" =~ [0-9] ]]; then
                echo "Parola trebuie sa aiba cel putin 8 caractere și sa contina cel putin o cifra."
                continue
            fi

            # Criptăm parola folosind sha256sum
            password_hash=$(echo -n "$password" | sha256sum | awk '{print $1}')

            # Descompunem calculul ID-ului utilizatorului
            line_count=$(wc -l < utilizatori.csv)   # numărul de linii din fișier
            user_id=$((line_count + 1))             # adăugăm 1 pentru a obține ID-ul

            # Creăm directorul home pentru utilizator, folosind ID-ul
            mkdir -p "/home/$user_id"
            echo "Directorul home pentru utilizatorul $username a fost creat la /home/$user_id."

            # Adăugăm utilizatorul în fișierul utilizatori.csv
            echo "$user_id,$username,$email,$password_hash" >> utilizatori.csv
            echo "Utilizatorul $username a fost adăugat în fișierul utilizatori.csv."

            # Confirmăm înregistrarea
            echo "Inregistrarea a fost realizata cu succes!"
            echo "ID Utilizator: $user_id"
            echo "Nume Utilizator: $username"
            echo "Email: $email"
            echo "Parola criptata: $password_hash"

            break
            ;;
        4)
            echo "Ieșire din program."
            break
            ;;
        *)
            echo "Opțiune invalidă."
            ;;
    esac
done
